/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package deliveryoversightsystem.purchasingHd;

import connection.AccessLayer;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.responseListModel;

/**
 *
 * @author Aimee
 */
public class AnsweredFollowUpList extends javax.swing.JFrame {

    private static AnsweredFollowUpList instance;
    
    public static void setInstance(AnsweredFollowUpList aInstance) {
      instance = aInstance;
    }
    
    
    /**
     * Creates new form AnsweredFollowUpList
     */
    public AnsweredFollowUpList() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
        setResizable(false);
        goBtn.setEnabled(false);
    }
    
    public static AnsweredFollowUpList getInstance(){
        if(instance == null)
            instance = new AnsweredFollowUpList();
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        answeredFollowUpListTable = new javax.swing.JTable();
        dosLabel = new javax.swing.JLabel();
        answeredFollowUpListLabel = new javax.swing.JLabel();
        answeredFollowUpListCB = new javax.swing.JComboBox();
        answeredFollowUpListSearchField = new javax.swing.JTextField();
        goBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        viewAnswerBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        viewAnswerBtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		
		addWindowListener(new java.awt.event.WindowAdapter(){
			public void windowClosing(java.awt.event.WindowEvent evt){
				formWindowClosing(evt);
			}
		});

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));

        answeredFollowUpListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Purchase Order No.", "Purchaser", "Supplier Name", "Date Faxed", "Status", "View Answer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        answeredFollowUpListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                answeredFollowUpListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(answeredFollowUpListTable);

        dosLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        dosLabel.setForeground(new java.awt.Color(255, 255, 255));
        dosLabel.setText("Delivery Oversight System");

        answeredFollowUpListLabel.setBackground(new java.awt.Color(255, 255, 255));
        answeredFollowUpListLabel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        answeredFollowUpListLabel.setForeground(new java.awt.Color(255, 255, 255));
        answeredFollowUpListLabel.setText("Answered Follow-Up List");

        answeredFollowUpListCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Purchase Order No.", "Delivery Status" }));

        goBtn.setBackground(new java.awt.Color(255, 255, 255));
        goBtn.setForeground(new java.awt.Color(0, 153, 255));
        goBtn.setText("GO");
        goBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBtnActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(255, 255, 255));
        refreshBtn.setForeground(new java.awt.Color(0, 153, 255));
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refreshBtn.png"))); // NOI18N
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnjButton1ActionPerformed(evt);
            }
        });

        viewAnswerBtn.setBackground(new java.awt.Color(255, 255, 255));
        viewAnswerBtn.setForeground(new java.awt.Color(0, 153, 255));
        viewAnswerBtn.setText("View Answer");
        viewAnswerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAnswerBtnActionPerformed(evt);
            }
        });

        viewAnswerBtn1.setBackground(new java.awt.Color(255, 255, 255));
        viewAnswerBtn1.setForeground(new java.awt.Color(0, 153, 255));
        viewAnswerBtn1.setText("Close Response");
        viewAnswerBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAnswerBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(answeredFollowUpListCB, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(answeredFollowUpListSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(goBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dosLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(answeredFollowUpListLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(viewAnswerBtn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewAnswerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(dosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answeredFollowUpListLabel)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(goBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(answeredFollowUpListSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(answeredFollowUpListCB, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewAnswerBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewAnswerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBtnjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnjButton1ActionPerformed
        // TODO add your handling code here:
        updateViewResponsesTable(responseListModel.getAllResponses());
    }//GEN-LAST:event_refreshBtnjButton1ActionPerformed

    private AnsweredFollowUp viewAnswer;
    
    private void viewAnswerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAnswerBtnActionPerformed
        // TODO add your handling code here:
        
        AccessLayer.getInstance().updateResponseStatusToViewed(purchaseNoID);
        viewAnswer = new AnsweredFollowUp(purchaseNoID);
        viewAnswer.setVisible(true);
        //AnsweredFollowUpList.instance.setEnabled(false);
        viewAnswer.retrieveResponse(purchaseNoID);
        
        System.gc();
        
    }//GEN-LAST:event_viewAnswerBtnActionPerformed

    public String purchaseNoID;
    
    private void answeredFollowUpListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_answeredFollowUpListTableMouseClicked
        // TODO add your handling code here:
        int i = evt.getY()/getAnsweredFollowUpListTable().getRowHeight();
        if(evt.getClickCount() == 2 && i < getAnsweredFollowUpListTable().getRowCount()){
            //setUpdateDependentOK(true);
            //setUpdateEmployeePanelValues(getDependentFromTable(i));
            purchaseNoID = getPurchaseOrderNo(i);
            //response = getResponseStatus(i);
            System.gc();
        }
    }//GEN-LAST:event_answeredFollowUpListTableMouseClicked

    private void viewAnswerBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAnswerBtn1ActionPerformed
        // TODO add your handling code here:
         AccessLayer.getInstance().closeResponse(purchaseNoID);
         AccessLayer.getInstance().closeFollowUp(purchaseNoID);
         updateViewResponsesTable(responseListModel.getAllResponses());
         
    }//GEN-LAST:event_viewAnswerBtn1ActionPerformed

    private void goBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String retVal = "";
        //String condition = getPurchaseHeadHomeSearchField().getSelectedItem().toString(); //currently here
        String condition = getAnsweredFollowUpListCB().getSelectedItem().toString(); //currently here
        
        if(condition.equalsIgnoreCase("Purchase Order No.")){
            retVal = "purchaseOrderNo";
        }else if(condition.equalsIgnoreCase("Delivery Status")){
            retVal = "deliveryStatus";
        }  
        
        String searchVal = getAnsweredFollowUpListSearchField().getText().trim();
        
        updateViewResponsesTable(responseListModel.getResponseWithSearch(retVal,searchVal));  
            System.gc();
    }//GEN-LAST:event_goBtnActionPerformed

    /**
     * get the data from the table at row i
     * @param i row
     * @return a String from row i
     */
    private String getPurchaseOrderNo(int i){
        String purchaseNo = getAnsweredFollowUpListTable().getValueAt(i, 0).toString();
        return purchaseNo;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnsweredFollowUpList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnsweredFollowUpList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnsweredFollowUpList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnsweredFollowUpList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnsweredFollowUpList().setVisible(true);
            }
        });
    }
    
    /***Getters and Setters ***/
    /**
     * 
     * @return 
     */
    
    public JTable getAnsweredFollowUpListTable() {
        return answeredFollowUpListTable;
    }

    public void setAnsweredFollowUpListTable(JTable answeredFollowUpListTable) {
        this.answeredFollowUpListTable = answeredFollowUpListTable;
    }

    public JComboBox getAnsweredFollowUpListCB() {
        return answeredFollowUpListCB;
    }

    public void setAnsweredFollowUpListCB(JComboBox answeredFollowUpListCB) {
        this.answeredFollowUpListCB = answeredFollowUpListCB;
    }

    public JTextField getAnsweredFollowUpListSearchField() {
        return answeredFollowUpListSearchField;
    }

    public void setAnsweredFollowUpListSearchField(JTextField answeredFollowUpListSearchField) {
        this.answeredFollowUpListSearchField = answeredFollowUpListSearchField;
    }

    
    
    
    /**
     * 
     * @param responseList 
     */
    public void updateViewResponsesTable(ArrayList<responseListModel> responseList){
        
        //JOptionPane.showMessageDialog(null,"Getting table results...");
        if(responseList == null)
            return;
        DefaultTableModel model = (DefaultTableModel) getAnsweredFollowUpListTable().getModel();
        int size = responseList.size(), modelRows = model.getRowCount();
        if(size > modelRows){
            for(int i = size-modelRows; i > 0; i--)
                model.addRow(new String[model.getColumnCount()]);
        }
        else if(modelRows > size){
            for(int i = modelRows-size; i > 0; i--)
                model.removeRow(0);
        }
        for(int i = 0; i < responseList.size(); i++){
            responseListModel m = responseList.get(i);
            
            model.setValueAt(m.getPurchaseNo(),i,0);
            model.setValueAt(m.getPurchaser(),i,1);
            model.setValueAt(m.getSupplierName(),i,2);
            model.setValueAt(m.getDateFaxed(),i,3);
            model.setValueAt(m.getDelStatus(),i,4);
            //model.setValueAt(m.getResponseStatus(),i,5);
            
            String response = m.getResponseStatus().trim();
            if(response.equals("DONE")){
                response = "View?";
            }else if(response.equals("Response Viewed")){
                response = "Response Viewed";
            }
            
            model.setValueAt(response,i,5);
            
            
//            
//            String pos = m.getPosition().trim();
//            // condition to display String Position not abbrev.
//            if(pos.equals("WM")){
//                pos = "Warehouse Manager";
//            }else if(pos.equals("PH")){
//                pos = "Purchasing Head";
//            }else if(pos.equals("SA")){
//                pos = "System Administrator";
//            }
//            model.setValueAt(pos,i,4);
//            model.setValueAt(m.getStatus(),i,5);
            
            //model.setValueAt(m.getPhilcareYear(),i,6); - account created date
            //model.setValueAt(m.getMonth1(),i,7); - change password button
            //model.setValueAt(m.getMonth2(),i,8); - deactivate button
            
            //ButtonColumn btnCol = new ButtonColumn(viewUsersTable, Change, 7);
           
        }
        System.gc();
    }
    
    private void showExitDialog(){
            purchaseHeadHome.instance.setEnabled(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt){
        showExitDialog();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox answeredFollowUpListCB;
    private javax.swing.JLabel answeredFollowUpListLabel;
    private javax.swing.JTextField answeredFollowUpListSearchField;
    private javax.swing.JTable answeredFollowUpListTable;
    private javax.swing.JLabel dosLabel;
    private javax.swing.JButton goBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton viewAnswerBtn;
    private javax.swing.JButton viewAnswerBtn1;
    // End of variables declaration//GEN-END:variables
}
