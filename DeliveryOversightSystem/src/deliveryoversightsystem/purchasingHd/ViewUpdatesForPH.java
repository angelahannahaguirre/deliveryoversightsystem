/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package deliveryoversightsystem.purchasingHd;

import com.toedter.calendar.DateUtil;
import com.toedter.calendar.JCalendar;
import com.toedter.calendar.JDateChooser;
import deliveryoversightsystem.purchasingHd.purchaseHeadHome;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.addItemModel;
import model.updatesModel;
import view.OptionPane;

/**
 *
 * @author Aimee
 */
public class ViewUpdatesForPH extends javax.swing.JFrame {

    
    /**
     * Creates new form ViewUpdatesForPH
     */
    public ViewUpdatesForPH() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
        setResizable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewUpdatesForPHTable = new javax.swing.JTable();
        dosLabel = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        goBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        purchaserLabel = new javax.swing.JLabel();
        purchaserField = new javax.swing.JTextField();
        purchaseOrderNoLabel = new javax.swing.JLabel();
        supplierNameLabel = new javax.swing.JLabel();
        dateFaxedLabel = new javax.swing.JLabel();
        supplierNameField = new javax.swing.JTextField();
        purchaseOrderNoField = new javax.swing.JTextField();
        addItemLabel = new javax.swing.JLabel();
        enterBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        refreshBtn = new javax.swing.JButton();
        viewUpdatesForPHCB = new javax.swing.JComboBox();
        homeBtn = new javax.swing.JButton();
        dateFaxedField = new com.toedter.calendar.JDateChooser();
        resetBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		
		addWindowListener(new java.awt.event.WindowAdapter(){
			public void windowClosing(java.awt.event.WindowEvent evt){
				formWindowClosing(evt);
			}
		});

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));

        viewUpdatesForPHTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        viewUpdatesForPHTable.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        viewUpdatesForPHTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Purchase Order No.", "Purchaser", "Supplier Name", "Date Faxed ", "Invoice No.", "Invoice Date", "Date Delivered", "Manual RR Date", "Electronic RR Date", "Reference RR No.", "Date Forwarded"
            }
        ));
        viewUpdatesForPHTable.setGridColor(new java.awt.Color(153, 153, 153));
        viewUpdatesForPHTable.setSelectionBackground(new java.awt.Color(0, 102, 153));
        jScrollPane1.setViewportView(viewUpdatesForPHTable);

        dosLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        dosLabel.setForeground(new java.awt.Color(255, 255, 255));
        dosLabel.setText("Delivery Oversight System");

        goBtn.setBackground(new java.awt.Color(255, 255, 255));
        goBtn.setForeground(new java.awt.Color(0, 153, 255));
        goBtn.setText("GO");
        goBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBtnActionPerformed(evt);
            }
        });

        purchaserLabel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        purchaserLabel.setForeground(new java.awt.Color(255, 255, 255));
        purchaserLabel.setText("Purchaser");

        purchaseOrderNoLabel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        purchaseOrderNoLabel.setForeground(new java.awt.Color(255, 255, 255));
        purchaseOrderNoLabel.setText("Purchase Order No.");

        supplierNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        supplierNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        supplierNameLabel.setText("Supplier Name");

        dateFaxedLabel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        dateFaxedLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateFaxedLabel.setText("Date Faxed");

        addItemLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addItemLabel.setForeground(new java.awt.Color(255, 255, 255));
        addItemLabel.setText("Add Item To Delivery List");

        enterBtn.setBackground(new java.awt.Color(255, 255, 255));
        enterBtn.setForeground(new java.awt.Color(0, 153, 255));
        enterBtn.setText("ENTER");
        enterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterBtnActionPerformed(evt);
            }
        });

        refreshBtn.setBackground(new java.awt.Color(255, 255, 255));
        refreshBtn.setForeground(new java.awt.Color(0, 153, 255));
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refreshBtn.png"))); // NOI18N
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnjButton1ActionPerformed(evt);
            }
        });

        viewUpdatesForPHCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Purchase Order No.", "Invoice No." }));

        homeBtn.setBackground(new java.awt.Color(255, 255, 255));
        homeBtn.setForeground(new java.awt.Color(0, 153, 255));
        homeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/home_25.png"))); // NOI18N
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        dateFaxedField.setOpaque(false);

        resetBtn.setBackground(new java.awt.Color(255, 255, 255));
        resetBtn.setForeground(new java.awt.Color(255, 0, 102));
        resetBtn.setText("RESET");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(dosLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewUpdatesForPHCB, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(goBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(dateFaxedLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dateFaxedField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(purchaseOrderNoLabel)
                                        .addGap(29, 29, 29)
                                        .addComponent(purchaseOrderNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(89, 89, 89)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(enterBtn))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(supplierNameLabel)
                                            .addComponent(purchaserLabel))
                                        .addGap(51, 51, 51)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(purchaserField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(supplierNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(addItemLabel)))
                        .addContainerGap(159, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dosLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(viewUpdatesForPHCB, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(goBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(homeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addItemLabel)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchaserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchaseOrderNoLabel)
                    .addComponent(purchaseOrderNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchaserLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(supplierNameLabel)
                                .addComponent(supplierNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateFaxedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterBtn)
                            .addComponent(resetBtn)))
                    .addComponent(dateFaxedLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshBtnjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnjButton1ActionPerformed
        // TODO add your handling code here:
        updateViewUpdatesTable(updatesModel.getAllUpdates());
    }//GEN-LAST:event_refreshBtnjButton1ActionPerformed

    private purchaseHeadHome PH;
    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        PH = new purchaseHeadHome();
        PH.setVisible(true);
    }//GEN-LAST:event_homeBtnActionPerformed

    private void enterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterBtnActionPerformed
        // TODO add your handling code here:
        //JFrame frame = new JFrame();
       
        String purchaseNo = getPurchaseOrderNoField().getText().trim();
        String purchaserName = getPurchaserField().getText().trim();
        String suppName = getSupplierNameField().getText().trim();

        String faxDate = "";
        
        
        Date fDate = getDateFaxedField().getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try{

            faxDate = dateFormat.format(fDate);

        }catch(Exception e){
            OptionPane.error("Invalid. Date Faxed is required.");
            return;
        }
        
        String deliveryStat = "New";
        String followUpFlag = "none"; //so it's either none or flagged
        
        //JOptionPane.showMessageDialog(null, purchaseNo);
        
        int dialogResult = JOptionPane.showConfirmDialog (null, "Would You Like to Add the Item into the Delivery List?","Confirmation",0);
        if(dialogResult == JOptionPane.YES_OPTION){
            
            if(new addItemModel(purchaseNo, purchaserName, suppName, faxDate, deliveryStat, followUpFlag).addItemToDB(true)){}
            //    clearCreateUserFields();   
                updateViewUpdatesTable(updatesModel.getAllUpdates());
                    System.gc();
                        //JOptionPane.showMessageDialog(null,"Successfully Added the Item!");
            
                        
            
        }else{
            JOptionPane.showMessageDialog(null,"Cancel1ed!");
        }
    }//GEN-LAST:event_enterBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:

        int choice = OptionPane.confirmationDialog("Are you sure you want to reset?");
        if(choice == JOptionPane.YES_OPTION){
            //clearCreateUserFields();
        }
    }//GEN-LAST:event_resetBtnActionPerformed

    private void goBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBtnActionPerformed
        // TODO add your handling code here:
        String retVal = "";
        String condition = getViewUpdatesForPHCB().getSelectedItem().toString(); //currently here
        
        if(condition.equalsIgnoreCase("Purchase Order No.")){
            retVal = "purchaseOrderNo";
        }else if(condition.equalsIgnoreCase("Invoice No.")){
            retVal = "invoiceNo";
        }  
        
        String searchVal = getSearchField().getText().trim();
        
        updateViewUpdatesTable(updatesModel.getInvoiceWithSearch(retVal,searchVal));  
            System.gc();
    }//GEN-LAST:event_goBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewUpdatesForPH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewUpdatesForPH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewUpdatesForPH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewUpdatesForPH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewUpdatesForPH().setVisible(true);
            }
        });
    }
    
    /**Getters and Setters**/
    public JDateChooser getDateFaxedField() {
        return dateFaxedField;
    }

    public void setDateFaxedField(JDateChooser dateFaxedField) {
        this.dateFaxedField = dateFaxedField;
    }

    public JTextField getPurchaseOrderNoField() {
        return purchaseOrderNoField;
    }

    public void setPurchaseOrderNoField(JTextField purchaseOrderNoField) {
        this.purchaseOrderNoField = purchaseOrderNoField;
    }

    public JTextField getPurchaserField() {
        return purchaserField;
    }

    public void setPurchaserField(JTextField purchaserField) {
        this.purchaserField = purchaserField;
    }

    public JTextField getSupplierNameField() {
        return supplierNameField;
    }

    public void setSupplierNameField(JTextField supplierNameField) {
        this.supplierNameField = supplierNameField;
    }

    public JTextField getSearchField() {
        return searchField;
    }

    public void setSearchField(JTextField searchField) {
        this.searchField = searchField;
    }

    public JComboBox getViewUpdatesForPHCB() {
        return viewUpdatesForPHCB;
    }

    public void setViewUpdatesForPHCB(JComboBox viewUpdatesForPHCB) {
        this.viewUpdatesForPHCB = viewUpdatesForPHCB;
    }
    
    
    
    private void showExitDialog(){
            purchaseHeadHome.instance.setEnabled(true);
            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt){
        showExitDialog();
    }
    
    /**
     * 
     * @param invoiceList 
     */
    public void updateViewUpdatesTable(ArrayList<updatesModel> invoiceList){
        
        //JOptionPane.showMessageDialog(null,"Getting table results...");
        if(invoiceList == null)
            return;
        DefaultTableModel model = (DefaultTableModel) getViewUpdatesForPHTable().getModel();
        int size = invoiceList.size(), modelRows = model.getRowCount();
        if(size > modelRows){
            for(int i = size-modelRows; i > 0; i--)
                model.addRow(new String[model.getColumnCount()]);
        }
        else if(modelRows > size){
            for(int i = modelRows-size; i > 0; i--)
                model.removeRow(0);
        }
        for(int i = 0; i < invoiceList.size(); i++){
            updatesModel m = invoiceList.get(i);
            
            model.setValueAt(m.getPurchaseNo(),i,0);
            model.setValueAt(m.getPurchaserName(),i,1);
            model.setValueAt(m.getSuppName(),i,2);
            model.setValueAt(m.getFaxedDate(),i,3);
            
            
            model.setValueAt(m.getInvoiceNo(),i,4);
            model.setValueAt(m.getInvoiceDate(),i,5);
            model.setValueAt(m.getDateDelivered(),i,6);
            model.setValueAt(m.getManualDate(),i,7);
            model.setValueAt(m.getElectronicDate(),i,8);
            model.setValueAt(m.getReferenceRRNo(),i,9);
            model.setValueAt(m.getDateForwarded(),i,10);
//            
//            String pos = m.getPosition().trim();
//            // condition to display String Position not abbrev.
//            if(pos.equals("WM")){
//                pos = "Warehouse Manager";
//            }else if(pos.equals("PH")){
//                pos = "Purchasing Head";
//            }else if(pos.equals("SA")){
//                pos = "System Administrator";
//            }
//            model.setValueAt(pos,i,4);
//            model.setValueAt(m.getStatus(),i,5);
            
            //model.setValueAt(m.getPhilcareYear(),i,6); - account created date
            //model.setValueAt(m.getMonth1(),i,7); - change password button
            //model.setValueAt(m.getMonth2(),i,8); - deactivate button
            
            //ButtonColumn btnCol = new ButtonColumn(viewUsersTable, Change, 7);
           
        }
        System.gc();
    }
    
    /**
     * added by angela 11.9.16
     * update the userList table by using the values in the userList arrayList
     * @param updateList 
     */
    public void updateViewUsersWithSearch(ArrayList<updatesModel> updateList) {
         if(updateList == null)
            return;
        DefaultTableModel model = (DefaultTableModel) getViewUpdatesForPHTable().getModel();
        int size = updateList.size(), modelRows = model.getRowCount();
        if(size > modelRows){
            for(int i = size-modelRows; i > 0; i--)
                model.addRow(new String[model.getColumnCount()]);
        }
        else if(modelRows > size){
            for(int i = modelRows-size; i > 0; i--)
                model.removeRow(0);
        }
        for(int i = 0; i < updateList.size(); i++){
            updatesModel m = updateList.get(i);
            
//            model.setValueAt(m.getPurchaseNo(),i,0);
//            model.setValueAt(m.getPurchaserName(),i,1);
//            model.setValueAt(m.getSuppName(),i,2);
//            model.setValueAt(m.getFaxedDate(),i,3);
            
            model.setValueAt(m.getPurchaseNo(),i,0);
            model.setValueAt(m.getPurchaserName(),i,1);
            model.setValueAt(m.getSuppName(),i,2);
            model.setValueAt(m.getFaxedDate(),i,3);
            
            model.setValueAt(m.getInvoiceNo(),i,4);
            model.setValueAt(m.getInvoiceDate(),i,5);
            model.setValueAt(m.getDateDelivered(),i,6);
            model.setValueAt(m.getManualDate(),i,7);
            model.setValueAt(m.getElectronicDate(),i,8);
            model.setValueAt(m.getReferenceRRNo(),i,9);
            model.setValueAt(m.getDateForwarded(),i,10);
            
            
        }
        System.gc();  
    }

    public JTable getViewUpdatesForPHTable() {
        return viewUpdatesForPHTable;
    }

    public void setViewUpdatesForPHTable(JTable viewUpdatesForPHTable) {
        this.viewUpdatesForPHTable = viewUpdatesForPHTable;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addItemLabel;
    private com.toedter.calendar.JDateChooser dateFaxedField;
    private javax.swing.JLabel dateFaxedLabel;
    private javax.swing.JLabel dosLabel;
    private javax.swing.JButton enterBtn;
    private javax.swing.JButton goBtn;
    private javax.swing.JButton homeBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField purchaseOrderNoField;
    private javax.swing.JLabel purchaseOrderNoLabel;
    private javax.swing.JTextField purchaserField;
    private javax.swing.JLabel purchaserLabel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextField supplierNameField;
    private javax.swing.JLabel supplierNameLabel;
    private javax.swing.JComboBox viewUpdatesForPHCB;
    private javax.swing.JTable viewUpdatesForPHTable;
    // End of variables declaration//GEN-END:variables
}
